spring.datasource.hikari.connectionTimeout=20000
spring.datasource.hikari.maximumPoolSize=3
## PostgreSQL
## A informação do Server encontra-se na página de detalhes conforme o print acima
spring.datasource.url=jdbc:postgresql://abul.db.elephantsql.com/pxequggb
## A informação do Usuário está na página de detalhes conforme o print acima
spring.datasource.username=pxequggb
## A informação de Senha está na página de detalhes conforme o print acima
spring.datasource.password=elcvWNCTZH4xQobukWHncKZaQjqc9jPe
spring.jpa.hibernate.ddl-auto=update

##Habilita a interface para fazer consulta no banco
#spring.h2.console.enabled=true
##Endpoint para acesso a interface
#spring.h2.console.path=/h2
##URL para acesso, neste caso cria uma instância em tempo de execução
#spring.datasource.url=jdbc:h2:mem:test
##Define o usuário para acesso ao banco
#spring.datasource.username=sa
##Define a senha, no caso em branco
#spring.datasource.password=
##Diretório do driver para comunicação
#spring.datasource.driver-class-name=org.h2.Driver
##Esta opção define como será iniciado a comunicação
## update -> atualiza o schema de acordo com o mapeamento
## create -> remove todo o banco e constrói novamente
## create-drop -> remove após finalizar o run da aplicação
## validate -> apenas valida o schema se corresponde ao mapeamento, caso tenha diferença um erro é exibido
#spring.jpa.hibernate.ddl-auto=update